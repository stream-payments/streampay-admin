import fs from"@medusajs/medusa-js";import{QueryClientProvider as Ps}from"@tanstack/react-query";import ge from"react";var yt=ge.createContext(null),n=()=>{let e=ge.useContext(yt);if(!e)throw new Error("useMedusa must be used within a MedusaProvider");return e},so=({queryClientProviderProps:e,baseUrl:t,apiKey:s,publishableApiKey:r,children:o})=>{let m=new fs({baseUrl:t,maxRetries:0,apiKey:s,publishableApiKey:r});return ge.createElement(Ps,{...e},ge.createElement(yt.Provider,{value:{client:m}},o))};import Ge,{useContext as Es,useEffect as Ss}from"react";var Ee=e=>e instanceof Object,ve=e=>Array.isArray(e),te=e=>e==null||Ee(e)&&Object.keys(e).length===0||ve(e)&&e.length===0||typeof e=="string"&&e.trim().length===0;var io=({variant:e,region:t,includeTaxes:s=!0,...r})=>{let o=Cs({variant:e,region:t,includeTaxes:s});return ft({amount:o,currency_code:t?.currency_code,...r})},Cs=({variant:e,region:t,includeTaxes:s=!0})=>{let r=Ie(e,t);return At({amount:r,region:t,includeTaxes:s})},Ie=(e,t)=>e?.prices?.find(r=>r.currency_code.toLowerCase()===t?.currency_code?.toLowerCase())?.amount||0,At=({amount:e,region:t,includeTaxes:s=!0})=>{let r=xs(e,t),o=s?gs(t):0;return r*(1+o)},ao=({amount:e,region:t,includeTaxes:s=!0,...r})=>{let o=At({amount:e,region:t,includeTaxes:s});return ft({amount:o,currency_code:t.currency_code,...r})},Os=["krw","jpy","vnd"],xs=(e,t)=>{let s=Os.includes(t?.currency_code?.toLowerCase())?1:100;return Math.floor(e)/s},gs=e=>e&&!te(e)?e?.tax_rate/100:0,ft=({amount:e,currency_code:t,minimumFractionDigits:s,maximumFractionDigits:r,locale:o="en-US"})=>t&&!te(t)?new Intl.NumberFormat(o,{style:"currency",currency:t,minimumFractionDigits:s,maximumFractionDigits:r}).format(e):e.toString();var a=e=>{let t={all:[e],lists:()=>[...t.all,"list"],list:s=>[...t.lists(),{query:s}],details:()=>[...t.all,"detail"],detail:s=>[...t.details(),s]};return t};import*as Pt from"react";var Ct=(e,t)=>{let[s,r]=Pt.useState(()=>{try{return typeof window<"u"&&window.localStorage.getItem(e)||t}catch{return t}});return[s,x=>{r(x),typeof window<"u"&&window.localStorage.setItem(e,x)},()=>{typeof window<"u"&&window.localStorage.removeItem(e)}]};var Ot=Ge.createContext(null);var Us=(e,t)=>{switch(t.type){case 0:return e;case 6:return ce({...e,region:t.payload},e.items);case 1:{let s=e.items.findIndex(o=>o.variant.id===t.payload?.variant?.id);s!==-1&&e.items.splice(s,1);let r=[...e.items,t.payload];return ce(e,r)}case 4:{let s=e.items.map(r=>r.variant.id===t.payload.id?{...r,...t.payload.item}:r);return ce(e,s)}case 3:{let s=e.items.filter(r=>r.variant.id!==t.payload.id);return ce(e,s)}case 2:return ce(e,t.payload);case 5:return{...e,items:[],total:0,totalItems:0};default:return e}},ce=(e,t)=>{let s=qs(e.region,t);return{...e,items:s,totalItems:t.reduce((r,o)=>r+o.quantity,0),total:Ms(s)}},qs=(e,t)=>t.map(s=>({...s,total:Ie(s.variant,e)})),Ms=e=>e.reduce((t,s)=>t+s.quantity*(s.total||0),0),Ks={region:{},items:[],total:0,totalItems:0},Co=({initialState:e=Ks,children:t})=>{let[s,r]=Ct("medusa-session-cart",JSON.stringify(e)),[o,m]=Ge.useReducer(Us,JSON.parse(s));Ss(()=>{r(JSON.stringify(o))},[o,r]);let x=d=>{if(!Ee(d)||te(d))throw new Error("region must be a non-empty object");m({type:6,payload:d})},ee=d=>o.items.find(A=>A.variant.id===d),Te=d=>{if(!ve(d))throw new Error("items must be an array of items");m({type:2,payload:d})},De=d=>{if(!Ee(d)||te(d))throw new Error("item must be a non-empty object");m({type:1,payload:d})},_e=(d,A)=>{m({type:4,payload:{id:d,item:A}})},f=(d,A)=>{let be=ee(d);!be||(A=A<=0?1:A,m({type:4,payload:{id:d,item:{...be,quantity:Math.min(be.variant.inventory_quantity,A)}}}))},Le=d=>{let A=ee(d);!A||m({type:4,payload:{id:d,item:{...A,quantity:Math.min(A.variant.inventory_quantity,A.quantity+1)}}})},Rs=d=>{let A=ee(d);!A||m({type:4,payload:{id:d,item:{...A,quantity:Math.max(0,A.quantity-1)}}})},ys=d=>{m({type:3,payload:{id:d}})},As=()=>{m({type:5})};return Ge.createElement(Ot.Provider,{value:{...o,setRegion:x,addItem:De,updateItem:_e,updateItemQuantity:f,incrementItemQuantity:Le,decrementItemQuantity:Rs,removeItem:ys,getItem:ee,setItems:Te,clearItems:As}},t)},Oo=()=>{let e=Es(Ot);if(!e)throw new Error("useSessionCart should be used as a child of SessionCartProvider");return e};import Fe,{useState as sr}from"react";import{useQuery as Qs}from"@tanstack/react-query";var hs="carts",Ts=a(hs),Uo=(e,t)=>{let{client:s}=n(),{data:r,...o}=Qs(Ts.detail(e),()=>s.carts.retrieve(e),t);return{...r,...o}};import{useMutation as T}from"@tanstack/react-query";var xt=e=>{let{client:t}=n();return T(s=>t.carts.create(s),e)},gt=(e,t)=>{let{client:s}=n();return T(r=>s.carts.update(e,r),t)},Et=(e,t)=>{let{client:s}=n();return T(()=>s.carts.complete(e),t)},St=(e,t)=>{let{client:s}=n();return T(()=>s.carts.createPaymentSessions(e),t)},ho=(e,t)=>{let{client:s}=n();return T(({data:r,provider_id:o})=>s.carts.updatePaymentSession(e,o,{data:r}),t)},To=(e,t)=>{let{client:s}=n();return T(({provider_id:r})=>s.carts.refreshPaymentSession(e,r),t)},Ut=(e,t)=>{let{client:s}=n();return T(r=>s.carts.setPaymentSession(e,r),t)},qt=(e,t)=>{let{client:s}=n();return T(r=>s.carts.addShippingMethod(e,r),t)},Do=(e,t)=>{let{client:s}=n();return T(({provider_id:r})=>s.carts.deletePaymentSession(e,r),t)},_o=e=>{let{client:t}=n();return T(async r=>{let{cart:o}=await t.carts.create(r);return(await t.carts.createPaymentSessions(o.id)).cart},e)};import{useQuery as Mt}from"@tanstack/react-query";var Ds="collections",Kt=a(Ds),Yo=(e,t)=>{let{client:s}=n(),{data:r,...o}=Mt(Kt.detail(e),()=>s.collections.retrieve(e),t);return{...r,...o}},wo=(e,t)=>{let{client:s}=n(),{data:r,...o}=Mt(Kt.list(e),()=>s.collections.list(e),t);return{...r,...o}};import{useQuery as Qt}from"@tanstack/react-query";var _s="customers",Ne={...a(_s),orders:e=>[...Ne.detail(e),"orders"]},zo=e=>{let{client:t}=n(),{data:s,...r}=Qt(Ne.detail("me"),()=>t.customers.retrieve(),e);return{...s,...r}},Ho=(e={limit:10,offset:0},t)=>{let{client:s}=n(),{data:r,...o}=Qt(Ne.orders("me"),()=>s.customers.listOrders(e),t);return{...r,...o}};import{useMutation as ht}from"@tanstack/react-query";var tn=e=>{let{client:t}=n();return ht(s=>t.customers.create(s),e)},sn=e=>{let{client:t}=n();return ht(({id:s,...r})=>t.customers.update(r),e)};import{useQuery as Ls}from"@tanstack/react-query";var bs="gift_cards",vs=a(bs),un=(e,t)=>{let{client:s}=n(),{data:r,...o}=Ls(vs.detail(e),()=>s.giftCards.retrieve(e),t);return{...r,...o}};import{useMutation as We}from"@tanstack/react-query";var Pn=(e,t)=>{let{client:s}=n();return We(r=>s.carts.lineItems.create(e,r),t)},Cn=(e,t)=>{let{client:s}=n();return We(({lineId:r,...o})=>s.carts.lineItems.update(e,r,o),t)},On=(e,t)=>{let{client:s}=n();return We(({lineId:r})=>s.carts.lineItems.delete(e,r),t)};import{useQuery as Is}from"@tanstack/react-query";var Gs="orderEdit",se=a(Gs),Mn=(e,t)=>{let{client:s}=n(),{data:r,...o}=Is(se.detail(e),()=>s.orderEdits.retrieve(e),t);return{...r,...o}};import{useMutation as Tt,useQueryClient as Dt}from"@tanstack/react-query";var i=(e,t,s)=>({...s,onSuccess:(...r)=>{if(s?.onSuccess)return s.onSuccess(...r);t!==void 0&&t.forEach(o=>{e.invalidateQueries({queryKey:o})})}});var bn=(e,t)=>{let{client:s}=n(),r=Dt();return Tt(o=>s.orderEdits.decline(e,o),i(r,[se.lists(),se.detail(e)],t))},vn=(e,t)=>{let{client:s}=n(),r=Dt();return Tt(()=>s.orderEdits.complete(e),i(r,[se.lists(),se.detail(e)],t))};import{useQuery as Ye}from"@tanstack/react-query";var Ns="orders",j={...a(Ns),cart:e=>[...j.details(),"cart",e]},Bn=(e,t)=>{let{client:s}=n(),{data:r,...o}=Ye(j.detail(e),()=>s.orders.retrieve(e),t);return{...r,...o}},Vn=(e,t)=>{let{client:s}=n(),{data:r,...o}=Ye(j.cart(e),()=>s.orders.retrieveByCartId(e),t);return{...r,...o}},Jn=(e,t)=>{let{client:s}=n(),{data:r,...o}=Ye(j.list(e),()=>s.orders.lookupOrder(e),t);return{...r,...o}};import{useMutation as _t,useQueryClient as Lt}from"@tanstack/react-query";var Zn=e=>{let{client:t}=n(),s=Lt();return _t(r=>t.orders.requestCustomerOrders(r),i(s,[j.all],e))},ei=e=>{let{client:t}=n(),s=Lt();return _t(r=>t.orders.confirmRequest(r),i(s,[j.all],e))};import{useQuery as Ws}from"@tanstack/react-query";var Ys="paymentCollection",g=a(Ys),mi=(e,t)=>{let{client:s}=n(),{data:r,...o}=Ws(g.detail(e),()=>s.paymentCollections.retrieve(e),t);return{...r,...o}};import{useMutation as le,useQueryClient as Re}from"@tanstack/react-query";var yi=(e,t)=>{let{client:s}=n(),r=Re();return le(o=>s.paymentCollections.managePaymentSessionsBatch(e,o),i(r,[g.lists(),g.detail(e)],t))},Ai=(e,t)=>{let{client:s}=n(),r=Re();return le(o=>s.paymentCollections.managePaymentSession(e,o),i(r,[g.lists(),g.detail(e)],t))},fi=(e,t)=>{let{client:s}=n(),r=Re();return le(o=>s.paymentCollections.authorizePaymentSession(e,o),i(r,[g.lists(),g.detail(e)],t))},Pi=(e,t)=>{let{client:s}=n(),r=Re();return le(o=>s.paymentCollections.authorizePaymentSessionsBatch(e,o),i(r,[g.lists(),g.detail(e)],t))},Ci=(e,t)=>{let{client:s}=n(),r=Re();return le(o=>s.paymentCollections.refreshPaymentSession(e,o),i(r,[g.lists(),g.detail(e)],t))};import{useQuery as ws}from"@tanstack/react-query";var Fs="product_tags",Bs=a(Fs),Mi=(e,t)=>{let{client:s}=n(),{data:r,...o}=ws(Bs.list(e),()=>s.productTags.list(e),t);return{...r,...o}};import{useQuery as Vs}from"@tanstack/react-query";var Js="product_types",ks=a(Js),Li=(e,t)=>{let{client:s}=n(),{data:r,...o}=Vs(ks.list(e),()=>s.productTypes.list(e),t);return{...r,...o}};import{useQuery as bt}from"@tanstack/react-query";var js="products",vt=a(js),Yi=(e,t)=>{let{client:s}=n(),{data:r,...o}=bt(vt.list(e),()=>s.products.list(e),t);return{...r,...o}},wi=(e,t)=>{let{client:s}=n(),{data:r,...o}=bt(vt.detail(e),()=>s.products.retrieve(e),t);return{...r,...o}};import{useQuery as It}from"@tanstack/react-query";var zs="regions",Gt=a(zs),zi=e=>{let{client:t}=n(),{data:s,...r}=It(Gt.lists(),()=>t.regions.list(),e);return{...s,...r}},Hi=(e,t)=>{let{client:s}=n(),{data:r,...o}=It(Gt.detail(e),()=>s.regions.retrieve(e),t);return{...r,...o}};import{useQuery as Nt}from"@tanstack/react-query";var Hs="return_reasons",Wt=a(Hs),ra=e=>{let{client:t}=n(),{data:s,...r}=Nt(Wt.lists(),()=>t.returnReasons.list(),e);return{...s,...r}},oa=(e,t)=>{let{client:s}=n(),{data:r,...o}=Nt(Wt.detail(e),()=>s.returnReasons.retrieve(e),t);return{...r,...o}};import{useMutation as Xs}from"@tanstack/react-query";var ua=e=>{let{client:t}=n();return Xs(s=>t.returns.create(s),e)};import{useQuery as Yt}from"@tanstack/react-query";var $s="shipping_options",we={...a($s),cart:e=>[...we.all,"cart",e]},Pa=(e,t)=>{let{client:s}=n(),{data:r,...o}=Yt(we.list(e),async()=>s.shippingOptions.list(e),t);return{...r,...o}},Ca=(e,t)=>{let{client:s}=n(),{data:r,...o}=Yt(we.cart(e),async()=>s.shippingOptions.listCartOptions(e),t);return{...r,...o}};import{useQuery as Zs}from"@tanstack/react-query";var er="swaps",wt={...a(er),cart:e=>[...wt.all,"cart",e]},qa=(e,t)=>{let{client:s}=n(),{data:r,...o}=Zs(wt.cart(e),()=>s.swaps.retrieveByCartId(e),t);return{...r,...o}};import{useMutation as tr}from"@tanstack/react-query";var Ta=e=>{let{client:t}=n();return tr(s=>t.swaps.create(s),e)};var Ft=Fe.createContext(null),tm=()=>{let e=Fe.useContext(Ft);if(!e)throw new Error("useCart must be used within a CartProvider");return e},rr={id:"",items:[]},sm=({children:e,initialState:t=rr})=>{let[s,r]=sr(t),o=xt({onSuccess:({cart:f})=>r(f)}),m=gt(s?.id,{onSuccess:({cart:f})=>r(f)}),x=qt(s?.id,{onSuccess:({cart:f})=>r(f)}),ee=St(s?.id,{onSuccess:({cart:f})=>r(f)}),Te=Ut(s?.id,{onSuccess:({cart:f})=>{r(f)}}),De=Et(s?.id),_e=s?.items.map(f=>f.quantity).reduce((f,Le)=>f+Le,0);return Fe.createElement(Ft.Provider,{value:{cart:s,setCart:r,createCart:o,pay:Te,startCheckout:ee,completeCheckout:De,updateCart:m,addShippingMethod:x,totalItems:_e||0}},e)};import{useQuery as or}from"@tanstack/react-query";var nr="admin_auth",Se=a(nr),um=e=>{let{client:t}=n(),{data:s,...r}=or(Se.details(),()=>t.admin.auth.getSession(),e);return{...s,...r}};import{useMutation as Bt,useQueryClient as Vt}from"@tanstack/react-query";var Pm=e=>{let{client:t}=n(),s=Vt();return Bt(r=>t.admin.auth.createSession(r),i(s,Se.details(),e))},Cm=e=>{let{client:t}=n(),s=Vt();return Bt(()=>t.admin.auth.deleteSession(),i(s,Se.details(),e))};import{useQuery as Jt}from"@tanstack/react-query";var ir="admin_batches",W=a(ir),Mm=(e,t)=>{let{client:s}=n(),{data:r,...o}=Jt(W.list(e),()=>s.admin.batchJobs.list(e),t);return{...r,...o}},Km=(e,t)=>{let{client:s}=n(),{data:r,...o}=Jt(W.detail(e),()=>s.admin.batchJobs.retrieve(e),t);return{...r,...o}};import{useMutation as Be,useQueryClient as Ve}from"@tanstack/react-query";var bm=e=>{let{client:t}=n(),s=Ve();return Be(r=>t.admin.batchJobs.create(r),i(s,W.lists(),e))},vm=(e,t)=>{let{client:s}=n(),r=Ve();return Be(()=>s.admin.batchJobs.cancel(e),i(r,[W.lists(),W.detail(e)],t))},Im=(e,t)=>{let{client:s}=n(),r=Ve();return Be(()=>s.admin.batchJobs.confirm(e),i(r,[W.lists(),W.detail(e)],t))};import{useMutation as re,useQueryClient as oe}from"@tanstack/react-query";import{useQuery as kt}from"@tanstack/react-query";var ar="admin_orders",p={...a(ar),detailOrder(e,t){return[...this.detail(e),{...t||{}}]}},Vm=(e,t)=>{let{client:s}=n(),{data:r,...o}=kt(p.list(e),()=>s.admin.orders.list(e),t);return{...r,...o}},Jm=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=kt(p.detailOrder(e,t),()=>r.admin.orders.retrieve(e,t),s);return{...o,...m}};var Zm=(e,t)=>{let{client:s}=n(),r=oe();return re(o=>s.admin.orders.createClaim(e,o),i(r,p.detail(e),t))},ep=(e,t)=>{let{client:s}=n(),r=oe();return re(({claim_id:o,...m})=>s.admin.orders.updateClaim(e,o,m),i(r,p.detail(e),t))},tp=(e,t)=>{let{client:s}=n(),r=oe();return re(o=>s.admin.orders.cancelClaim(e,o),i(r,p.detail(e),t))},sp=(e,t)=>{let{client:s}=n(),r=oe();return re(({claim_id:o,...m})=>s.admin.orders.fulfillClaim(e,o,m),i(r,p.detail(e),t))},rp=(e,t)=>{let{client:s}=n(),r=oe();return re(({claim_id:o,fulfillment_id:m})=>s.admin.orders.cancelClaimFulfillment(e,o,m),i(r,p.detail(e),t))},op=(e,t)=>{let{client:s}=n(),r=oe();return re(({claim_id:o,...m})=>s.admin.orders.createClaimShipment(e,o,m),i(r,p.detail(e),t))};import{useQuery as jt}from"@tanstack/react-query";var mr="admin_collections",E=a(mr),up=(e,t)=>{let{client:s}=n(),{data:r,...o}=jt(E.list(e),()=>s.admin.collections.list(e),t);return{...r,...o}},cp=(e,t)=>{let{client:s}=n(),{data:r,...o}=jt(E.detail(e),()=>s.admin.collections.retrieve(e),t);return{...r,...o}};import{useMutation as ye,useQueryClient as Ae}from"@tanstack/react-query";var Cp=e=>{let{client:t}=n(),s=Ae();return ye(r=>t.admin.collections.create(r),i(s,E.lists(),e))},Op=(e,t)=>{let{client:s}=n(),r=Ae();return ye(o=>s.admin.collections.update(e,o),i(r,[E.lists(),E.detail(e)],t))},xp=(e,t)=>{let{client:s}=n(),r=Ae();return ye(()=>s.admin.collections.delete(e),i(r,[E.lists(),E.detail(e)],t))},gp=(e,t)=>{let{client:s}=n(),r=Ae();return ye(o=>s.admin.collections.addProducts(e,o),i(r,[E.lists(),E.detail(e)],t))},Ep=(e,t)=>{let{client:s}=n(),r=Ae();return ye(o=>s.admin.collections.removeProducts(e,o),i(r,[E.lists(),E.detail(e)],t))};import{useMutation as ur,useQueryClient as cr}from"@tanstack/react-query";import{useQuery as pr}from"@tanstack/react-query";var dr="admin_currencies",Ue=a(dr),Tp=(e,t)=>{let{client:s}=n(),{data:r,...o}=pr(Ue.list(e),()=>s.admin.currencies.list(e),t);return{...r,...o}};var Gp=(e,t)=>{let{client:s}=n(),r=cr();return ur(o=>s.admin.currencies.update(e,o),i(r,[Ue.lists(),Ue.detail(e)],t))};import{useQuery as Je}from"@tanstack/react-query";var lr="admin_customer_groups",O={...a(lr),detailCustomer(e,t){return[...this.detail(e),"customers",{...t||{}}]}},Jp=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=Je(O.detail(e),()=>r.admin.customerGroups.retrieve(e,t),s);return{...o,...m}},kp=(e,t)=>{let{client:s}=n(),{data:r,...o}=Je(O.list(e),()=>s.admin.customerGroups.list(e),t);return{...r,...o}},jp=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=Je(O.detailCustomer(e,t),()=>r.admin.customerGroups.listCustomers(e,t),s);return{...o,...m}};import{useMutation as fe,useQueryClient as Pe}from"@tanstack/react-query";var td=e=>{let{client:t}=n(),s=Pe();return fe(r=>t.admin.customerGroups.create(r),i(s,O.lists(),e))},sd=(e,t)=>{let{client:s}=n(),r=Pe();return fe(o=>s.admin.customerGroups.update(e,o),i(r,[O.lists(),O.detail(e)],t))},rd=(e,t)=>{let{client:s}=n(),r=Pe();return fe(()=>s.admin.customerGroups.delete(e),i(r,[O.lists(),O.detail(e)],t))},od=(e,t)=>{let{client:s}=n(),r=Pe();return fe(o=>s.admin.customerGroups.addCustomers(e,o),i(r,[O.lists(),O.detailCustomer(e)],t))},nd=(e,t)=>{let{client:s}=n(),r=Pe();return fe(o=>s.admin.customerGroups.removeCustomers(e,o),i(r,[O.lists(),O.detailCustomer(e)],t))};import{useQuery as zt}from"@tanstack/react-query";var Rr="admin_customers",S=a(Rr),ld=(e,t)=>{let{client:s}=n(),{data:r,...o}=zt(S.list(e),()=>s.admin.customers.list(e),t);return{...r,...o}},Rd=(e,t)=>{let{client:s}=n(),{data:r,...o}=zt(S.detail(e),()=>s.admin.customers.retrieve(e),t);return{...r,...o}};import{useMutation as Ht,useQueryClient as Xt}from"@tanstack/react-query";var xd=e=>{let{client:t}=n(),s=Xt();return Ht(r=>t.admin.customers.create(r),i(s,S.lists(),e))},gd=(e,t)=>{let{client:s}=n(),r=Xt();return Ht(o=>s.admin.customers.update(e,o),i(r,[S.lists(),S.detail(e)],t))};import{useQuery as qe}from"@tanstack/react-query";var yr="admin_discounts",R={...a(yr),detailCondition(e,t){return[...this.detail(e),"condition",{...t||{}}]}},hd=(e,t)=>{let{client:s}=n(),{data:r,...o}=qe(R.list(e),()=>s.admin.discounts.list(e),t);return{...r,...o}},Td=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=qe(R.detail(e),()=>r.admin.discounts.retrieve(e,t),s);return{...o,...m}},Dd=(e,t)=>{let{client:s}=n(),{data:r,...o}=qe(R.detail(e),()=>s.admin.discounts.retrieveByCode(e),t);return{...r,...o}},_d=(e,t,s,r)=>{let{client:o}=n(),{data:m,...x}=qe(R.detailCondition(t),()=>o.admin.discounts.getCondition(e,t,s),r);return{...m,...x}};import{useMutation as U,useQueryClient as q}from"@tanstack/react-query";var Wd=(e,t,s,r)=>{let{client:o}=n(),m=q();return U(x=>o.admin.discounts.addConditionResourceBatch(e,t,x,s),i(m,R.detail(e),r))},Yd=(e,t,s)=>{let{client:r}=n(),o=q();return U(m=>r.admin.discounts.deleteConditionResourceBatch(e,t,m),i(o,[R.detail(e)],s))},wd=e=>{let{client:t}=n(),s=q();return U(r=>t.admin.discounts.create(r),i(s,R.lists(),e))},Fd=(e,t)=>{let{client:s}=n(),r=q();return U(o=>s.admin.discounts.update(e,o),i(r,R.detail(e),t))},Bd=(e,t)=>{let{client:s}=n(),r=q();return U(()=>s.admin.discounts.delete(e),i(r,R.lists(),t))},Vd=(e,t)=>{let{client:s}=n(),r=q();return U(o=>s.admin.discounts.addRegion(e,o),i(r,R.detail(e),t))},Jd=(e,t)=>{let{client:s}=n(),r=q();return U(o=>s.admin.discounts.removeRegion(e,o),i(r,R.detail(e),t))},kd=(e,t)=>{let{client:s}=n(),r=q();return U(o=>s.admin.discounts.createDynamicCode(e,o),i(r,[R.lists(),R.detail(e)],t))},jd=(e,t)=>{let{client:s}=n(),r=q();return U(o=>s.admin.discounts.deleteDynamicCode(e,o),i(r,[R.lists(),R.detail(e)],t))},zd=(e,t)=>{let{client:s}=n(),r=q();return U(o=>s.admin.discounts.createCondition(e,o),i(r,R.detail(e),t))},Hd=(e,t,s)=>{let{client:r}=n(),o=q();return U(m=>r.admin.discounts.updateCondition(e,t,m),i(o,R.detail(e),s))},Xd=(e,t)=>{let{client:s}=n(),r=q();return U(o=>s.admin.discounts.deleteCondition(e,o),i(r,R.detail(e),t))};import{useQuery as $t}from"@tanstack/react-query";var Ar="admin_draft_orders",M=a(Ar),nu=(e,t)=>{let{client:s}=n(),{data:r,...o}=$t(M.list(e),()=>s.admin.draftOrders.list(e),t);return{...r,...o}},iu=(e,t)=>{let{client:s}=n(),{data:r,...o}=$t(M.detail(e),()=>s.admin.draftOrders.retrieve(e),t);return{...r,...o}};import{useMutation as z,useQueryClient as H}from"@tanstack/react-query";var lu=e=>{let{client:t}=n(),s=H();return z(r=>t.admin.draftOrders.create(r),i(s,M.lists(),e))},Ru=(e,t)=>{let{client:s}=n(),r=H();return z(o=>s.admin.draftOrders.update(e,o),i(r,[M.detail(e),M.lists()],t))},yu=(e,t)=>{let{client:s}=n(),r=H();return z(()=>s.admin.draftOrders.delete(e),i(r,[M.detail(e),M.lists()],t))},Au=(e,t)=>{let{client:s}=n(),r=H();return z(()=>s.admin.draftOrders.markPaid(e),i(r,M.detail(e),t))},fu=(e,t)=>{let{client:s}=n(),r=H();return z(o=>s.admin.draftOrders.addLineItem(e,o),i(r,M.detail(e),t))},Pu=(e,t)=>{let{client:s}=n(),r=H();return z(o=>s.admin.draftOrders.removeLineItem(e,o),i(r,M.detail(e),t))},Cu=(e,t)=>{let{client:s}=n(),r=H();return z(({item_id:o,...m})=>s.admin.draftOrders.updateLineItem(e,o,m),i(r,M.detail(e),t))};import{useQuery as Zt}from"@tanstack/react-query";var fr="admin_gift_cards",Y=a(fr),Mu=(e,t)=>{let{client:s}=n(),{data:r,...o}=Zt(Y.list(e),()=>s.admin.giftCards.list(e),t);return{...r,...o}},Ku=(e,t)=>{let{client:s}=n(),{data:r,...o}=Zt(Y.detail(e),()=>s.admin.giftCards.retrieve(e),t);return{...r,...o}};import{useMutation as ke,useQueryClient as je}from"@tanstack/react-query";var bu=e=>{let{client:t}=n(),s=je();return ke(r=>t.admin.giftCards.create(r),i(s,Y.lists(),e))},vu=(e,t)=>{let{client:s}=n(),r=je();return ke(o=>s.admin.giftCards.update(e,o),i(r,[Y.lists(),Y.detail(e)],t))},Iu=(e,t)=>{let{client:s}=n(),r=je();return ke(()=>s.admin.giftCards.delete(e),i(r,[Y.lists(),Y.detail(e)],t))};import{useQuery as Pr}from"@tanstack/react-query";var Cr="admin_invites",ne=a(Cr),Vu=e=>{let{client:t}=n(),{data:s,...r}=Pr(ne.lists(),()=>t.admin.invites.list(),e);return{...s,...r}};import{useMutation as Me,useQueryClient as ze}from"@tanstack/react-query";var $u=e=>{let{client:t}=n(),s=ze();return Me(r=>t.admin.invites.accept(r),i(s,ne.lists(),e))},Zu=(e,t)=>{let{client:s}=n();return Me(()=>s.admin.invites.resend(e),t)},ec=e=>{let{client:t}=n(),s=ze();return Me(r=>t.admin.invites.create(r),i(s,ne.lists(),e))},tc=(e,t)=>{let{client:s}=n(),r=ze();return Me(()=>s.admin.invites.delete(e),i(r,[ne.lists(),ne.detail(e)],t))};import{useQuery as es}from"@tanstack/react-query";var Or="admin_notes",w=a(Or),pc=(e,t)=>{let{client:s}=n(),{data:r,...o}=es(w.list(e),()=>s.admin.notes.list(e),t);return{...r,...o}},dc=(e,t)=>{let{client:s}=n(),{data:r,...o}=es(w.detail(e),()=>s.admin.notes.retrieve(e),t);return{...r,...o}};import{useMutation as He,useQueryClient as Xe}from"@tanstack/react-query";var fc=e=>{let{client:t}=n(),s=Xe();return He(r=>t.admin.notes.create(r),i(s,w.lists(),e))},Pc=(e,t)=>{let{client:s}=n(),r=Xe();return He(o=>s.admin.notes.update(e,o),i(r,[w.detail(e),w.lists()],t))},Cc=(e,t)=>{let{client:s}=n(),r=Xe();return He(()=>s.admin.notes.delete(e),i(r,[w.detail(e),w.lists()],t))};import{useQuery as xr}from"@tanstack/react-query";var gr="admin_notifications",Ke=a(gr),Mc=(e,t)=>{let{client:s}=n(),{data:r,...o}=xr(Ke.list(e),()=>s.admin.notifications.list(e),t);return{...r,...o}};import{useMutation as Er,useQueryClient as Sr}from"@tanstack/react-query";var Lc=(e,t)=>{let{client:s}=n(),r=Sr();return Er(o=>s.admin.notifications.resend(e,o),i(r,[Ke.lists(),Ke.detail(e)],t))};import{useMutation as Q,useQueryClient as h}from"@tanstack/react-query";var Bc=(e,t)=>{let{client:s}=n(),r=h();return Q(o=>s.admin.orders.update(e,o),i(r,[p.lists(),p.detail(e)],t))},Vc=(e,t)=>{let{client:s}=n(),r=h();return Q(()=>s.admin.orders.cancel(e),i(r,[p.lists(),p.detail(e)],t))},Jc=(e,t)=>{let{client:s}=n(),r=h();return Q(()=>s.admin.orders.complete(e),i(r,[p.lists(),p.detail(e)],t))},kc=(e,t)=>{let{client:s}=n(),r=h();return Q(()=>s.admin.orders.capturePayment(e),i(r,[p.lists(),p.detail(e)],t))},jc=(e,t)=>{let{client:s}=n(),r=h();return Q(o=>s.admin.orders.refundPayment(e,o),i(r,[p.lists(),p.detail(e)],t))},zc=(e,t)=>{let{client:s}=n(),r=h();return Q(o=>s.admin.orders.createFulfillment(e,o),i(r,[p.lists(),p.detail(e)],t))},Hc=(e,t)=>{let{client:s}=n(),r=h();return Q(o=>s.admin.orders.cancelFulfillment(e,o),i(r,[p.lists(),p.detail(e)],t))},Xc=(e,t)=>{let{client:s}=n(),r=h();return Q(o=>s.admin.orders.createShipment(e,o),i(r,p.detail(e),t))},$c=(e,t)=>{let{client:s}=n(),r=h();return Q(o=>s.admin.orders.requestReturn(e,o),i(r,p.detail(e),t))},Zc=(e,t)=>{let{client:s}=n(),r=h();return Q(o=>s.admin.orders.addShippingMethod(e,o),i(r,p.detail(e),t))},el=(e,t)=>{let{client:s}=n(),r=h();return Q(()=>s.admin.orders.archive(e),i(r,[p.lists(),p.detail(e)],t))};import{useQuery as ts}from"@tanstack/react-query";var Ur="admin_order_edits",c=a(Ur),ml=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=ts(c.detail(e),()=>r.admin.orderEdits.retrieve(e,t),s);return{...o,...m}},pl=(e,t)=>{let{client:s}=n(),{data:r,...o}=ts(c.list(e),()=>s.admin.orderEdits.list(e),t);return{...r,...o}};import{useMutation as D,useQueryClient as _}from"@tanstack/react-query";var fl=e=>{let{client:t}=n(),s=_();return D(r=>t.admin.orderEdits.create(r),i(s,[c.lists(),p.details()],e))},Pl=(e,t)=>{let{client:s}=n(),r=_();return D(()=>s.admin.orderEdits.delete(e),i(r,[c.detail(e),c.lists(),p.details()],t))},Cl=(e,t,s)=>{let{client:r}=n(),o=_();return D(()=>r.admin.orderEdits.deleteItemChange(e,t),i(o,[c.detail(e),c.lists()],s))},Ol=(e,t,s)=>{let{client:r}=n(),o=_();return D(m=>r.admin.orderEdits.updateLineItem(e,t,m),i(o,[c.detail(e),c.lists()],s))},xl=(e,t,s)=>{let{client:r}=n(),o=_();return D(()=>r.admin.orderEdits.removeLineItem(e,t),i(o,[c.detail(e),c.lists()],s))},gl=(e,t)=>{let{client:s}=n(),r=_();return D(o=>s.admin.orderEdits.update(e,o),i(r,[c.lists(),c.detail(e),p.details()],t))},El=(e,t)=>{let{client:s}=n(),r=_();return D(o=>s.admin.orderEdits.addLineItem(e,o),i(r,[c.lists(),c.detail(e)],t))},Sl=(e,t)=>{let{client:s}=n(),r=_();return D(()=>s.admin.orderEdits.requestConfirmation(e),i(r,[c.lists(),c.detail(e),p.details()],t))},Ul=(e,t)=>{let{client:s}=n(),r=_();return D(()=>s.admin.orderEdits.cancel(e),i(r,[c.lists(),c.detail(e),p.details()],t))},ql=(e,t)=>{let{client:s}=n(),r=_();return D(()=>s.admin.orderEdits.confirm(e),i(r,[c.lists(),c.detail(e),p.details()],t))};import{useQuery as $e}from"@tanstack/react-query";var qr="admin_price_lists",y={...a(qr),detailProducts(e,t){return[...this.detail(e),"products",{...t||{}}]}},Ll=(e,t)=>{let{client:s}=n(),{data:r,...o}=$e(y.list(e),()=>s.admin.priceLists.list(e),t);return{...r,...o}},bl=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=$e(y.detailProducts(e,t),()=>r.admin.priceLists.listProducts(e,t),s);return{...o,...m}},vl=(e,t)=>{let{client:s}=n(),{data:r,...o}=$e(y.detail(e),()=>s.admin.priceLists.retrieve(e),t);return{...r,...o}};import{useMutation as X,useQueryClient as $}from"@tanstack/react-query";import{useQuery as Ze}from"@tanstack/react-query";var Mr="admin_products",u=a(Mr),Yl=(e,t)=>{let{client:s}=n(),{data:r,...o}=Ze(u.list(e),()=>s.admin.products.list(e),t);return{...r,...o}},wl=(e,t)=>{let{client:s}=n(),{data:r,...o}=Ze(u.detail(e),()=>s.admin.products.retrieve(e),t);return{...r,...o}},Fl=e=>{let{client:t}=n(),{data:s,...r}=Ze(u.detail("tags"),()=>t.admin.products.listTags(),e);return{...s,...r}};import{useMutation as L,useQueryClient as b}from"@tanstack/react-query";var Hl=e=>{let{client:t}=n(),s=b();return L(r=>t.admin.products.create(r),i(s,u.lists(),e))},Xl=(e,t)=>{let{client:s}=n(),r=b();return L(o=>s.admin.products.update(e,o),i(r,[u.lists(),u.detail(e)],t))},$l=(e,t)=>{let{client:s}=n(),r=b();return L(()=>s.admin.products.delete(e),i(r,[u.lists(),u.detail(e)],t))},Zl=(e,t)=>{let{client:s}=n(),r=b();return L(o=>s.admin.products.createVariant(e,o),i(r,[u.lists(),u.detail(e)],t))},eR=(e,t)=>{let{client:s}=n(),r=b();return L(({variant_id:o,...m})=>s.admin.products.updateVariant(e,o,m),i(r,[u.lists(),u.detail(e)],t))},tR=(e,t)=>{let{client:s}=n(),r=b();return L(o=>s.admin.products.deleteVariant(e,o),i(r,[u.lists(),u.detail(e)],t))},sR=(e,t)=>{let{client:s}=n(),r=b();return L(o=>s.admin.products.addOption(e,o),i(r,u.detail(e),t))},rR=(e,t)=>{let{client:s}=n(),r=b();return L(({option_id:o,...m})=>s.admin.products.updateOption(e,o,m),i(r,u.detail(e),t))},oR=(e,t)=>{let{client:s}=n(),r=b();return L(o=>s.admin.products.deleteOption(e,o),i(r,u.detail(e),t))};import{useQuery as Kr}from"@tanstack/react-query";var Qr="admin_variants",et=a(Qr),cR=(e,t)=>{let{client:s}=n(),{data:r,...o}=Kr(et.list(e),()=>s.admin.variants.list(e),t);return{...r,...o}};var ER=e=>{let{client:t}=n(),s=$();return X(r=>t.admin.priceLists.create(r),i(s,y.lists(),e))},SR=(e,t)=>{let{client:s}=n(),r=$();return X(o=>s.admin.priceLists.update(e,o),i(r,[y.detail(e),y.lists(),y.detailProducts(e)],t))},UR=(e,t)=>{let{client:s}=n(),r=$();return X(()=>s.admin.priceLists.delete(e),i(r,[y.detail(e),y.lists()],t))},qR=(e,t)=>{let{client:s}=n(),r=$();return X(o=>s.admin.priceLists.addPrices(e,o),i(r,[y.lists(),y.detailProducts(e)],t))},MR=(e,t)=>{let{client:s}=n(),r=$();return X(o=>s.admin.priceLists.deletePrices(e,o),i(r,[y.detail(e),y.lists(),y.detailProducts(e)],t))},KR=(e,t,s)=>{let{client:r}=n(),o=$();return X(()=>r.admin.priceLists.deleteProductPrices(e,t),i(o,[y.detail(e),y.lists(),u.detail(t)],s))},QR=(e,t,s)=>{let{client:r}=n(),o=$();return X(()=>r.admin.priceLists.deleteVariantPrices(e,t),i(o,[y.detail(e),y.lists(),et.detail(t)],s))};import{useQuery as hr}from"@tanstack/react-query";var Tr="admin_product_tags",Dr=a(Tr),IR=(e,t)=>{let{client:s}=n(),{data:r,...o}=hr(Dr.list(e),()=>s.admin.productTags.list(e),t);return{...r,...o}};import{useQuery as _r}from"@tanstack/react-query";var Lr="admin_product_types",br=a(Lr),BR=(e,t)=>{let{client:s}=n(),{data:r,...o}=_r(br.list(e),()=>s.admin.productTypes.list(e),t);return{...r,...o}};import{useQuery as tt}from"@tanstack/react-query";var vr="admin_publishable_api_keys",C={...a(vr),detailSalesChannels(e,t){return[...this.detail(e),"sales_channels",{...t||{}}]}},XR=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=tt(C.detail(e),()=>r.admin.publishableApiKeys.retrieve(e,t),s);return{...o,...m}},$R=(e,t)=>{let{client:s}=n(),{data:r,...o}=tt(C.list(e),()=>s.admin.publishableApiKeys.list(e),t);return{...r,...o}},ZR=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=tt(C.detailSalesChannels(e,t),()=>r.admin.publishableApiKeys.listSalesChannels(e,t),s);return{...o,...m}};import{useMutation as ie,useQueryClient as ae}from"@tanstack/react-query";var iy=e=>{let{client:t}=n(),s=ae();return ie(r=>t.admin.publishableApiKeys.create(r),i(s,[C.lists()],e))},ay=(e,t)=>{let{client:s}=n(),r=ae();return ie(o=>s.admin.publishableApiKeys.update(e,o),i(r,[C.lists(),C.detail(e),C.details()],t))},my=(e,t)=>{let{client:s}=n(),r=ae();return ie(()=>s.admin.publishableApiKeys.delete(e),i(r,[C.detail(e),C.lists()],t))},py=(e,t)=>{let{client:s}=n(),r=ae();return ie(()=>s.admin.publishableApiKeys.revoke(e),i(r,[C.lists(),C.detail(e)],t))},dy=(e,t)=>{let{client:s}=n(),r=ae();return ie(o=>s.admin.publishableApiKeys.addSalesChannelsBatch(e,o),i(r,[C.detailSalesChannels(e)],t))},uy=(e,t)=>{let{client:s}=n(),r=ae();return ie(o=>s.admin.publishableApiKeys.deleteSalesChannelsBatch(e,o),i(r,[C.detailSalesChannels(e)],t))};import{useQuery as st}from"@tanstack/react-query";var Ir="admin_regions",P=a(Ir),Cy=(e,t)=>{let{client:s}=n(),{data:r,...o}=st(P.list(e),()=>s.admin.regions.list(e),t);return{...r,...o}},Oy=(e,t)=>{let{client:s}=n(),{data:r,...o}=st(P.detail(e),()=>s.admin.regions.retrieve(e),t);return{...r,...o}},xy=(e,t)=>{let{client:s}=n(),{data:r,...o}=st(P.detail(`${e}_fullfillment-options`),()=>s.admin.regions.retrieveFulfillmentOptions(e),t);return{...r,...o}};import{useMutation as v,useQueryClient as I}from"@tanstack/react-query";var Ky=e=>{let{client:t}=n(),s=I();return v(r=>t.admin.regions.create(r),i(s,P.lists(),e))},Qy=(e,t)=>{let{client:s}=n(),r=I();return v(o=>s.admin.regions.update(e,o),i(r,[P.lists(),P.detail(e)],t))},hy=(e,t)=>{let{client:s}=n(),r=I();return v(()=>s.admin.regions.delete(e),i(r,[P.lists(),P.detail(e)],t))},Ty=(e,t)=>{let{client:s}=n(),r=I();return v(o=>s.admin.regions.addCountry(e,o),i(r,P.detail(e),t))},Dy=(e,t)=>{let{client:s}=n(),r=I();return v(o=>s.admin.regions.deleteCountry(e,o),i(r,P.detail(e),t))},_y=(e,t)=>{let{client:s}=n(),r=I();return v(o=>s.admin.regions.addFulfillmentProvider(e,o),i(r,P.detail(e),t))},Ly=(e,t)=>{let{client:s}=n(),r=I();return v(o=>s.admin.regions.deleteFulfillmentProvider(e,o),i(r,P.detail(e),t))},by=(e,t)=>{let{client:s}=n(),r=I();return v(o=>s.admin.regions.addPaymentProvider(e,o),i(r,P.detail(e),t))},vy=(e,t)=>{let{client:s}=n(),r=I();return v(o=>s.admin.regions.deletePaymentProvider(e,o),i(r,P.detail(e),t))};import{useQuery as ss}from"@tanstack/react-query";var Gr="admin_return_reasons",F=a(Gr),By=e=>{let{client:t}=n(),{data:s,...r}=ss(F.lists(),()=>t.admin.returnReasons.list(),e);return{...s,...r}},Vy=(e,t)=>{let{client:s}=n(),{data:r,...o}=ss(F.detail(e),()=>s.admin.returnReasons.retrieve(e),t);return{...r,...o}};import{useMutation as rt,useQueryClient as ot}from"@tanstack/react-query";var $y=e=>{let{client:t}=n(),s=ot();return rt(r=>t.admin.returnReasons.create(r),i(s,F.lists(),e))},Zy=(e,t)=>{let{client:s}=n(),r=ot();return rt(o=>s.admin.returnReasons.update(e,o),i(r,[F.detail(e),F.lists()],t))},eA=(e,t)=>{let{client:s}=n(),r=ot();return rt(()=>s.admin.returnReasons.delete(e),i(r,[F.detail(e),F.lists()],t))};import{useQuery as Nr}from"@tanstack/react-query";var Wr="admin_returns",me=a(Wr),mA=e=>{let{client:t}=n(),{data:s,...r}=Nr(me.lists(),()=>t.admin.returns.list(),e);return{...s,...r}};import{useMutation as rs,useQueryClient as os}from"@tanstack/react-query";var yA=(e,t)=>{let{client:s}=n(),r=os();return rs(o=>s.admin.returns.receive(e,o),i(r,[me.detail(e),me.list()],t))},AA=(e,t)=>{let{client:s}=n(),r=os();return rs(()=>s.admin.returns.cancel(e),i(r,[me.detail(e),me.list()],t))};import{useQuery as ns}from"@tanstack/react-query";var Yr="admin_sales_channels",K=a(Yr),SA=(e,t)=>{let{client:s}=n(),{data:r,...o}=ns(K.detail(e),()=>s.admin.salesChannels.retrieve(e),t);return{...r,...o}},UA=(e,t)=>{let{client:s}=n(),{data:r,...o}=ns(K.list(e),()=>s.admin.salesChannels.list(e),t);return{...r,...o}};import{useMutation as Ce,useQueryClient as Oe}from"@tanstack/react-query";var _A=e=>{let{client:t}=n(),s=Oe();return Ce(r=>t.admin.salesChannels.create(r),i(s,[K.list()],e))},LA=(e,t)=>{let{client:s}=n(),r=Oe();return Ce(o=>s.admin.salesChannels.update(e,o),i(r,[K.lists(),K.detail(e)],t))},bA=(e,t)=>{let{client:s}=n(),r=Oe();return Ce(()=>s.admin.salesChannels.delete(e),i(r,[K.lists(),K.detail(e)],t))},vA=(e,t)=>{let{client:s}=n(),r=Oe();return Ce(o=>s.admin.salesChannels.removeProducts(e,o),i(r,[K.lists(),K.detail(e),u.list({sales_channel_id:[e]})],t))},IA=(e,t)=>{let{client:s}=n(),r=Oe();return Ce(o=>s.admin.salesChannels.addProducts(e,o),i(r,[K.lists(),K.detail(e),u.list({sales_channel_id:[e]})],t))};import{useQuery as is}from"@tanstack/react-query";var wr="admin_shipping_options",B=a(wr),VA=(e,t)=>{let{client:s}=n(),{data:r,...o}=is(B.list(e),()=>s.admin.shippingOptions.list(e),t);return{...r,...o}},JA=(e,t)=>{let{client:s}=n(),{data:r,...o}=is(B.detail(e),()=>s.admin.shippingOptions.retrieve(e),t);return{...r,...o}};import{useMutation as nt,useQueryClient as it}from"@tanstack/react-query";var ZA=e=>{let{client:t}=n(),s=it();return nt(r=>t.admin.shippingOptions.create(r),i(s,B.lists(),e))},ef=(e,t)=>{let{client:s}=n(),r=it();return nt(o=>s.admin.shippingOptions.update(e,o),i(r,[B.lists(),B.detail(e)],t))},tf=(e,t)=>{let{client:s}=n(),r=it();return nt(()=>s.admin.shippingOptions.delete(e),i(r,[B.lists(),B.detail(e)],t))};import{useQuery as as}from"@tanstack/react-query";var Fr="admin_shippingProfiles",V=a(Fr),df=e=>{let{client:t}=n(),{data:s,...r}=as(V.lists(),()=>t.admin.shippingProfiles.list(),e);return{...s,...r}},uf=(e,t)=>{let{client:s}=n(),{data:r,...o}=as(V.detail(e),()=>s.admin.shippingProfiles.retrieve(e),t);return{...r,...o}};import{useMutation as at,useQueryClient as mt}from"@tanstack/react-query";var Pf=e=>{let{client:t}=n(),s=mt();return at(r=>t.admin.shippingProfiles.create(r),i(s,V.lists(),e))},Cf=(e,t)=>{let{client:s}=n(),r=mt();return at(o=>s.admin.shippingProfiles.update(e,o),i(r,[V.lists(),V.detail(e)],t))},Of=(e,t)=>{let{client:s}=n(),r=mt();return at(()=>s.admin.shippingProfiles.delete(e),i(r,[V.lists(),V.detail(e)],t))};import{useQuery as pt}from"@tanstack/react-query";var Br="admin_store",Z=a(Br),Kf=e=>{let{client:t}=n(),{data:s,...r}=pt(Z.detail("payment_providers"),()=>t.admin.store.listPaymentProviders(),e);return{...s,...r}},Qf=e=>{let{client:t}=n(),{data:s,...r}=pt(Z.detail("tax_providers"),()=>t.admin.store.listTaxProviders(),e);return{...s,...r}},hf=e=>{let{client:t}=n(),{data:s,...r}=pt(Z.details(),()=>t.admin.store.retrieve(),e);return{...s,...r}};import{useMutation as dt,useQueryClient as ut}from"@tanstack/react-query";var If=e=>{let{client:t}=n(),s=ut();return dt(r=>t.admin.store.update(r),i(s,Z.details(),e))},Gf=e=>{let{client:t}=n(),s=ut();return dt(r=>t.admin.store.deleteCurrency(r),i(s,Z.details(),e))},Nf=e=>{let{client:t}=n(),s=ut();return dt(r=>t.admin.store.deleteCurrency(r),i(s,Z.details(),e))};import{useQuery as ms}from"@tanstack/react-query";var Vr="admin_swaps",J=a(Vr),kf=(e,t)=>{let{client:s}=n(),{data:r,...o}=ms(J.list(e),()=>s.admin.swaps.list(e),t);return{...r,...o}},jf=(e,t)=>{let{client:s}=n(),{data:r,...o}=ms(J.detail(e),()=>s.admin.swaps.retrieve(e),t);return{...r,...o}};import{useMutation as pe,useQueryClient as de}from"@tanstack/react-query";var sP=(e,t)=>{let{client:s}=n(),r=de();return pe(o=>s.admin.orders.createSwap(e,o),i(r,[p.detail(e),J.lists()],t))},rP=(e,t)=>{let{client:s}=n(),r=de();return pe(o=>s.admin.orders.cancelSwap(e,o),i(r,[p.detail(e),J.lists()],t))},oP=(e,t)=>{let{client:s}=n(),r=de();return pe(({swap_id:o,...m})=>s.admin.orders.fulfillSwap(e,o,m),i(r,[p.detail(e),J.lists()],t))},nP=(e,t)=>{let{client:s}=n(),r=de();return pe(({swap_id:o,...m})=>s.admin.orders.createSwapShipment(e,o,m),i(r,p.detail(e),t))},iP=(e,t)=>{let{client:s}=n(),r=de();return pe(o=>s.admin.orders.processSwapPayment(e,o),i(r,[p.detail(e),J.lists()],t))},aP=(e,t)=>{let{client:s}=n(),r=de();return pe(({swap_id:o,fulfillment_id:m})=>s.admin.orders.cancelSwapFulfillment(e,o,m),i(r,[p.detail(e),J.lists()],t))};import{useQuery as ps}from"@tanstack/react-query";var Jr="admin_tax_rates",l=a(Jr),yP=(e,t)=>{let{client:s}=n(),{data:r,...o}=ps(l.list(e),()=>s.admin.taxRates.list(e),t);return{...r,...o}},AP=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=ps(l.detail(e),()=>r.admin.taxRates.retrieve(e,t),s);return{...o,...m}};import{useMutation as G,useQueryClient as N}from"@tanstack/react-query";var EP=e=>{let{client:t}=n(),s=N();return G(r=>t.admin.taxRates.create(r),i(s,l.lists(),e))},SP=(e,t)=>{let{client:s}=n(),r=N();return G(o=>s.admin.taxRates.update(e,o),i(r,[l.lists(),l.detail(e)],t))},UP=(e,t)=>{let{client:s}=n(),r=N();return G(()=>s.admin.taxRates.delete(e),i(r,[l.lists(),l.detail(e)],t))},qP=(e,t)=>{let{client:s}=n(),r=N();return G(o=>s.admin.taxRates.addProducts(e,o),i(r,[l.lists(),l.detail(e)],t))},MP=(e,t)=>{let{client:s}=n(),r=N();return G(o=>s.admin.taxRates.removeProducts(e,o),i(r,[l.lists(),l.detail(e)],t))},KP=(e,t)=>{let{client:s}=n(),r=N();return G(o=>s.admin.taxRates.addProductTypes(e,o),i(r,[l.lists(),l.detail(e)],t))},QP=(e,t)=>{let{client:s}=n(),r=N();return G(o=>s.admin.taxRates.removeProductTypes(e,o),i(r,[l.lists(),l.detail(e)],t))},hP=(e,t)=>{let{client:s}=n(),r=N();return G(o=>s.admin.taxRates.addShippingOptions(e,o),i(r,[l.lists(),l.detail(e)],t))},TP=(e,t)=>{let{client:s}=n(),r=N();return G(o=>s.admin.taxRates.removeShippingOptions(e,o),i(r,[l.lists(),l.detail(e)],t))};import{useMutation as Qe,useQueryClient as he}from"@tanstack/react-query";var WP=e=>{let{client:t}=n(),s=he();return Qe(r=>t.admin.uploads.create(r),i(s,void 0,e))},YP=e=>{let{client:t}=n(),s=he();return Qe(r=>t.admin.uploads.createProtected(r),i(s,void 0,e))},wP=e=>{let{client:t}=n(),s=he();return Qe(r=>t.admin.uploads.getPresignedDownloadUrl(r),i(s,void 0,e))},FP=e=>{let{client:t}=n(),s=he();return Qe(r=>t.admin.uploads.delete(r),i(s,void 0,e))};import{useQuery as ds}from"@tanstack/react-query";var kr="admin_users",us=a(kr),HP=e=>{let{client:t}=n(),{data:s,...r}=ds(us.lists(),()=>t.admin.users.list(),e);return{...s,...r}},XP=(e,t)=>{let{client:s}=n(),{data:r,...o}=ds(us.detail(e),()=>s.admin.users.retrieve(e),t);return{...r,...o}};import{useMutation as xe,useQueryClient as ct}from"@tanstack/react-query";var oC=e=>{let{client:t}=n(),s=ct();return xe(r=>t.admin.users.create(r),i(s,S.lists(),e))},nC=(e,t)=>{let{client:s}=n(),r=ct();return xe(o=>s.admin.users.update(e,o),i(r,[S.lists(),S.detail(e)],t))},iC=(e,t)=>{let{client:s}=n(),r=ct();return xe(()=>s.admin.users.delete(e),i(r,[S.detail(e),S.lists()],t))},aC=e=>{let{client:t}=n();return xe(s=>t.admin.users.resetPassword(s),e)},mC=e=>{let{client:t}=n();return xe(s=>t.admin.users.sendResetPasswordToken(s),e)};import{useQuery as jr}from"@tanstack/react-query";var zr="paymentCollection",k=a(zr),AC=(e,t)=>{let{client:s}=n(),{data:r,...o}=jr(k.detail(e),()=>s.admin.paymentCollections.retrieve(e),t);return{...r,...o}};import{useMutation as lt,useQueryClient as Rt}from"@tanstack/react-query";var EC=(e,t)=>{let{client:s}=n(),r=Rt();return lt(()=>s.admin.paymentCollections.delete(e),i(r,[k.detail(e),k.lists()],t))},SC=(e,t)=>{let{client:s}=n(),r=Rt();return lt(o=>s.admin.paymentCollections.update(e,o),i(r,[k.detail(e),k.lists()],t))},UC=(e,t)=>{let{client:s}=n(),r=Rt();return lt(()=>s.admin.paymentCollections.markAsAuthorized(e),i(r,[k.detail(e),k.lists()],t))};import{useQuery as Hr}from"@tanstack/react-query";var Xr="payment",ue=a(Xr),_C=(e,t)=>{let{client:s}=n(),{data:r,...o}=Hr(ue.detail(e),()=>s.admin.payments.retrieve(e),t);return{...r,...o}};import{useMutation as cs,useQueryClient as ls}from"@tanstack/react-query";var WC=(e,t)=>{let{client:s}=n(),r=ls();return cs(()=>s.admin.payments.capturePayment(e),i(r,[ue.detail(e),ue.lists()],t))},YC=(e,t)=>{let{client:s}=n(),r=ls();return cs(o=>s.admin.payments.refundPayment(e,o),i(r,[ue.detail(e),ue.lists()],t))};export{sm as CartProvider,so as MedusaProvider,Co as SessionCartProvider,Se as adminAuthKeys,W as adminBatchJobsKeys,E as adminCollectionKeys,Ue as adminCurrenciesKeys,O as adminCustomerGroupKeys,S as adminCustomerKeys,R as adminDiscountKeys,M as adminDraftOrderKeys,Y as adminGiftCardKeys,ne as adminInviteKeys,w as adminNoteKeys,Ke as adminNotificationKeys,c as adminOrderEditsKeys,p as adminOrderKeys,k as adminPaymentCollectionQueryKeys,ue as adminPaymentQueryKeys,y as adminPriceListKeys,u as adminProductKeys,Dr as adminProductTagKeys,br as adminProductTypeKeys,C as adminPublishableApiKeysKeys,P as adminRegionKeys,me as adminReturnKeys,F as adminReturnReasonKeys,K as adminSalesChannelsKeys,B as adminShippingOptionKeys,V as adminShippingProfileKeys,Z as adminStoreKeys,J as adminSwapKeys,l as adminTaxRateKeys,us as adminUserKeys,et as adminVariantKeys,Ts as cartKeys,Kt as collectionKeys,At as computeAmount,Cs as computeVariantPrice,Ne as customerKeys,ao as formatAmount,io as formatVariantPrice,ce as generateCartState,Ie as getVariantPrice,vs as giftCardKeys,se as orderEditQueryKeys,j as orderKeys,g as paymentCollectionQueryKeys,vt as productKeys,Bs as productTagKeys,ks as productTypeKeys,qt as useAddShippingMethodToCart,$u as useAdminAcceptInvite,od as useAdminAddCustomersToCustomerGroup,Wd as useAdminAddDiscountConditionResourceBatch,gp as useAdminAddProductsToCollection,IA as useAdminAddProductsToSalesChannel,dy as useAdminAddPublishableKeySalesChannelsBatch,Zc as useAdminAddShippingMethod,Gf as useAdminAddStoreCurrency,el as useAdminArchiveOrder,Km as useAdminBatchJob,Mm as useAdminBatchJobs,vm as useAdminCancelBatchJob,tp as useAdminCancelClaim,rp as useAdminCancelClaimFulfillment,Hc as useAdminCancelFulfillment,Vc as useAdminCancelOrder,Ul as useAdminCancelOrderEdit,AA as useAdminCancelReturn,rP as useAdminCancelSwap,aP as useAdminCancelSwapFulfillment,kc as useAdminCapturePayment,cp as useAdminCollection,up as useAdminCollections,Jc as useAdminCompleteOrder,Im as useAdminConfirmBatchJob,ql as useAdminConfirmOrderEdit,bm as useAdminCreateBatchJob,Zm as useAdminCreateClaim,op as useAdminCreateClaimShipment,Cp as useAdminCreateCollection,xd as useAdminCreateCustomer,td as useAdminCreateCustomerGroup,wd as useAdminCreateDiscount,lu as useAdminCreateDraftOrder,kd as useAdminCreateDynamicDiscountCode,zc as useAdminCreateFulfillment,bu as useAdminCreateGiftCard,ec as useAdminCreateInvite,fc as useAdminCreateNote,fl as useAdminCreateOrderEdit,wP as useAdminCreatePresignedDownloadUrl,ER as useAdminCreatePriceList,qR as useAdminCreatePriceListPrices,Hl as useAdminCreateProduct,sR as useAdminCreateProductOption,qP as useAdminCreateProductTaxRates,KP as useAdminCreateProductTypeTaxRates,iy as useAdminCreatePublishableApiKey,Ky as useAdminCreateRegion,$y as useAdminCreateReturnReason,_A as useAdminCreateSalesChannel,Xc as useAdminCreateShipment,ZA as useAdminCreateShippingOption,Pf as useAdminCreateShippingProfile,hP as useAdminCreateShippingTaxRates,sP as useAdminCreateSwap,nP as useAdminCreateSwapShipment,EP as useAdminCreateTaxRate,oC as useAdminCreateUser,Zl as useAdminCreateVariant,Tp as useAdminCurrencies,Rd as useAdminCustomer,Jp as useAdminCustomerGroup,jp as useAdminCustomerGroupCustomers,kp as useAdminCustomerGroups,ld as useAdminCustomers,xp as useAdminDeleteCollection,rd as useAdminDeleteCustomerGroup,Bd as useAdminDeleteDiscount,Yd as useAdminDeleteDiscountConditionResourceBatch,yu as useAdminDeleteDraftOrder,jd as useAdminDeleteDynamicDiscountCode,FP as useAdminDeleteFile,Iu as useAdminDeleteGiftCard,tc as useAdminDeleteInvite,Cc as useAdminDeleteNote,Pl as useAdminDeleteOrderEdit,Cl as useAdminDeleteOrderEditItemChange,EC as useAdminDeletePaymentCollection,UR as useAdminDeletePriceList,MR as useAdminDeletePriceListPrices,KR as useAdminDeletePriceListProductPrices,QR as useAdminDeletePriceListVariantPrices,$l as useAdminDeleteProduct,oR as useAdminDeleteProductOption,MP as useAdminDeleteProductTaxRates,QP as useAdminDeleteProductTypeTaxRates,vA as useAdminDeleteProductsFromSalesChannel,my as useAdminDeletePublishableApiKey,hy as useAdminDeleteRegion,eA as useAdminDeleteReturnReason,bA as useAdminDeleteSalesChannel,Cm as useAdminDeleteSession,tf as useAdminDeleteShippingOption,Of as useAdminDeleteShippingProfile,TP as useAdminDeleteShippingTaxRates,Nf as useAdminDeleteStoreCurrency,UP as useAdminDeleteTaxRate,iC as useAdminDeleteUser,tR as useAdminDeleteVariant,Td as useAdminDiscount,Vd as useAdminDiscountAddRegion,zd as useAdminDiscountCreateCondition,Xd as useAdminDiscountRemoveCondition,Jd as useAdminDiscountRemoveRegion,Hd as useAdminDiscountUpdateCondition,hd as useAdminDiscounts,iu as useAdminDraftOrder,fu as useAdminDraftOrderAddLineItem,Au as useAdminDraftOrderRegisterPayment,Pu as useAdminDraftOrderRemoveLineItem,Cu as useAdminDraftOrderUpdateLineItem,nu as useAdminDraftOrders,sp as useAdminFulfillClaim,oP as useAdminFulfillSwap,Dd as useAdminGetDiscountByCode,_d as useAdminGetDiscountCondition,um as useAdminGetSession,Ku as useAdminGiftCard,Mu as useAdminGiftCards,Vu as useAdminInvites,Pm as useAdminLogin,UC as useAdminMarkPaymentCollectionAsAuthorized,dc as useAdminNote,pc as useAdminNotes,Mc as useAdminNotifications,Jm as useAdminOrder,ml as useAdminOrderEdit,El as useAdminOrderEditAddLineItem,xl as useAdminOrderEditDeleteLineItem,Ol as useAdminOrderEditUpdateLineItem,pl as useAdminOrderEdits,Vm as useAdminOrders,_C as useAdminPayment,AC as useAdminPaymentCollection,WC as useAdminPaymentsCapturePayment,YC as useAdminPaymentsRefundPayment,vl as useAdminPriceList,bl as useAdminPriceListProducts,Ll as useAdminPriceLists,iP as useAdminProcessSwapPayment,wl as useAdminProduct,Fl as useAdminProductTagUsage,IR as useAdminProductTags,BR as useAdminProductTypes,Yl as useAdminProducts,XR as useAdminPublishableApiKey,ZR as useAdminPublishableApiKeySalesChannels,$R as useAdminPublishableApiKeys,yA as useAdminReceiveReturn,jc as useAdminRefundPayment,Oy as useAdminRegion,Ty as useAdminRegionAddCountry,_y as useAdminRegionAddFulfillmentProvider,by as useAdminRegionAddPaymentProvider,Ly as useAdminRegionDeleteFulfillmentProvider,vy as useAdminRegionDeletePaymentProvider,xy as useAdminRegionFulfillmentOptions,Dy as useAdminRegionRemoveCountry,Cy as useAdminRegions,nd as useAdminRemoveCustomersFromCustomerGroup,Ep as useAdminRemoveProductsFromCollection,uy as useAdminRemovePublishableKeySalesChannelsBatch,Sl as useAdminRequestOrderEditConfirmation,$c as useAdminRequestReturn,Zu as useAdminResendInvite,Lc as useAdminResendNotification,aC as useAdminResetPassword,Vy as useAdminReturnReason,By as useAdminReturnReasons,mA as useAdminReturns,py as useAdminRevokePublishableApiKey,SA as useAdminSalesChannel,UA as useAdminSalesChannels,mC as useAdminSendResetPasswordToken,JA as useAdminShippingOption,VA as useAdminShippingOptions,uf as useAdminShippingProfile,df as useAdminShippingProfiles,hf as useAdminStore,Kf as useAdminStorePaymentProviders,Qf as useAdminStoreTaxProviders,jf as useAdminSwap,kf as useAdminSwaps,AP as useAdminTaxRate,yP as useAdminTaxRates,ep as useAdminUpdateClaim,Op as useAdminUpdateCollection,Gp as useAdminUpdateCurrency,gd as useAdminUpdateCustomer,sd as useAdminUpdateCustomerGroup,Fd as useAdminUpdateDiscount,Ru as useAdminUpdateDraftOrder,vu as useAdminUpdateGiftCard,Pc as useAdminUpdateNote,Bc as useAdminUpdateOrder,gl as useAdminUpdateOrderEdit,SC as useAdminUpdatePaymentCollection,SR as useAdminUpdatePriceList,Xl as useAdminUpdateProduct,rR as useAdminUpdateProductOption,ay as useAdminUpdatePublishableApiKey,Qy as useAdminUpdateRegion,Zy as useAdminUpdateReturnReason,LA as useAdminUpdateSalesChannel,ef as useAdminUpdateShippingOption,Cf as useAdminUpdateShippingProfile,If as useAdminUpdateStore,SP as useAdminUpdateTaxRate,nC as useAdminUpdateUser,eR as useAdminUpdateVariant,WP as useAdminUploadFile,YP as useAdminUploadProtectedFile,XP as useAdminUser,HP as useAdminUsers,cR as useAdminVariants,fi as useAuthorizePaymentSession,Pi as useAuthorizePaymentSessionsBatch,tm as useCart,Vn as useCartOrder,Ca as useCartShippingOptions,qa as useCartSwap,Yo as useCollection,wo as useCollections,Et as useCompleteCart,vn as useCompleteOrderEdit,xt as useCreateCart,tn as useCreateCustomer,Pn as useCreateLineItem,St as useCreatePaymentSession,ua as useCreateReturn,Ta as useCreateSwap,Ho as useCustomerOrders,bn as useDeclineOrderEdit,On as useDeleteLineItem,Do as useDeletePaymentSession,Uo as useGetCart,un as useGiftCard,ei as useGrantOrderAccess,yi as useManageMultiplePaymentSessions,Ai as useManagePaymentSession,zo as useMeCustomer,n as useMedusa,Bn as useOrder,Mn as useOrderEdit,Jn as useOrders,mi as usePaymentCollection,Ci as usePaymentCollectionRefreshPaymentSession,wi as useProduct,Mi as useProductTags,Li as useProductTypes,Yi as useProducts,To as useRefreshPaymentSession,Hi as useRegion,zi as useRegions,Zn as useRequestOrderAccess,oa as useReturnReason,ra as useReturnReasons,Oo as useSessionCart,Ut as useSetPaymentSession,Pa as useShippingOptions,_o as useStartCheckout,gt as useUpdateCart,Cn as useUpdateLineItem,sn as useUpdateMe,ho as useUpdatePaymentSession};
//# sourceMappingURL=index.mjs.map